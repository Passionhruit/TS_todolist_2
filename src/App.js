import React, { useState } from "react";
import "./App.css";

function App() {
  const [title, setTitle] = useState("");
  const [detail, setDetail] = useState("");

  const [list, setList] = useState([
    { id: 1, title: "ÏàòÌïô", detail: "Íµ¨Íµ¨Îã® Ïô∏Ïö∞Í∏∞", isDone: false },
    { id: 2, title: "Íµ≠Ïñ¥", detail: "Î∞õÏïÑÏì∞Í∏∞", isDone: false },
    { id: 3, title: "ÏòÅÏñ¥", detail: "Îã®Ïñ¥ Ïô∏Ïö∞Í∏∞", isDone: true },
    { id: 4, title: "Í≥ºÌïô", detail: "Ï£ºÍ∏∞Ïú®Ìëú Ïô∏Ïö∞Í∏∞", isDone: true },
  ]);

  const titleChangeHandler = (e) => {
    setTitle(e.target.value);
  };

  const detailChangeHandler = (e) => {
    setDetail(e.target.value);
  };

  const addList = (e) => {
    if (title.length !== 0 && detail.length !== 0) {
      const newList = {
        id: list.length + 1,
        title,
        detail,
        isDone: false,
      };
      setList([...list, newList]);
    } else {
      alert("Ï†úÎ™©Í≥º ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
    }
    e.preventDefault(); // Ìèº Ï†úÏ∂úÏãú ÏÉàÎ°úÍ≥†Ïπ®ÏùÑ ÎßâÏùå
    setTitle(""); // Title, Detail Îπà Í∞íÏúºÎ°ú
    setDetail("");
  };

  // ÏöîÏÜå ÏÇ≠Ï†ú
  const deleteList = (id) => {
    const updatedList = list
      .filter((value) => value.id !== id) // value.id Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÎäî Î¶¨Ïä§Ìä∏Î°ú Í±∞Î¶Ñ
      .map((value, i) => {
        // ÏóÖÎç∞Ïù¥Ìä∏Îêú Î¶¨Ïä§Ìä∏ id Í∞ÅÍ∞ÅÏùò Í∞íÏùÑ i + 1 Î°ú Í∞±Ïã† (Ï§ëÎ≥µ ÌîºÌï®)
        return { ...value, id: i + 1 };
      });
    setList(updatedList);
  };

  // doneList Î°ú Ïù¥Îèô
  const doneList = (id) => {
    setList((updatedList) => {
      const movedList = updatedList.map((value) => {
        if (value.id === id) {
          // idÍ∞Ä ÏùºÏπòÌïòÎäî updated.ListÏùò valueÏùò isDoneÏùÑ trueÎ°ú Î¶¨ÌÑ¥
          return {
            ...value,
            isDone: true,
          };
        }
        return value;
      });
      return movedList;
    });
  };

  // workingList Î°ú Ïù¥Îèô
  const workingList = (id) => {
    setList((updatedList) => {
      const movedList = updatedList.map((value) => {
        if (value.id === id) {
          return {
            ...value,
            isDone: false,
          };
        }
        return value;
      });
      return movedList;
    });
  };

  return (
    <>
      <div className="divStyle">
        <h1>TO DO LIST</h1>
        <form>
          <span className="spanStyle">
            Title{"\u00A0"}
            <input type="text" value={title} onChange={titleChangeHandler} />
          </span>
          <span className="spanStyle">
            Detail{"\u00A0"}
            <input type="text" value={detail} onChange={detailChangeHandler} />
          </span>
          <button onClick={addList}>Add</button>
        </form>
        <div className="innderDivStyle">
          <ul className="ulStyle">
            <h2>‚úèÔ∏è Working</h2>

            {list.map((value) => {
              if (value.isDone === false) {
                return (
                  <li key={value.id} className="listStyle">
                    <h3 className="titleStyle">{value.title}</h3>
                    <p className="detailStyle">{value.detail}</p>
                    <button
                      onClick={() => deleteList(value.id)}
                      className="btnStyle"
                    >
                      X
                    </button>
                    <button
                      onClick={() =>
                        doneList(value.id, value.title, value.detail)
                      }
                      className="btnStyle"
                    >
                      ÏôÑÎ£å
                    </button>
                  </li>
                );
              }
              return null;
            })}
          </ul>
          <ul className="ulStyle">
            <h2>üéâ Done</h2>
            {list.map((value) => {
              if (value.isDone === true) {
                return (
                  <li key={value.id} className="listStyle">
                    <h3 className="titleStyle">{value.title}</h3>
                    <p className="detailStyle">{value.detail}</p>
                    <button
                      onClick={() => deleteList(value.id)}
                      className="btnStyle"
                    >
                      X
                    </button>
                    <button
                      onClick={() =>
                        workingList(value.id, value.title, value.detail)
                      }
                      className="btnStyle"
                    >
                      ÏßÑÌñâÏ§ë
                    </button>
                  </li>
                );
              }
              return null;
            })}
          </ul>
        </div>
      </div>
    </>
  );
}

export default App;
